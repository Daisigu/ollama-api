image: node:20

stages:
  - build
  - deploy

variables:
  DIST_PATH: "dist"
  DEPLOY_PATH: "/var/www/ollama-api"
  SERVER_IP: "188.243.28.22"       # Replace with your server IP
  SERVER_USERNAME: "bogd"          # Replace with your SSH user
  PM2_PROCESS_NAME: "ollama-api"

before_script:
  - apt-get update && apt-get install -y rsync openssh-client
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

build:
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - $DIST_PATH

deploy:
  stage: deploy
  only:
    - main  # Deploy only on the main branch
  script:
    # Add server to known_hosts to avoid SSH verification issues
    - mkdir -p ~/.ssh
    - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts
    
    # Remove existing content on server (clean deploy path)
    - ssh "$SERVER_USERNAME@$SERVER_IP" "rm -rf $DEPLOY_PATH/*"
    
    # Ensure the deploy directory exists and set appropriate permissions
    - ssh "$SERVER_USERNAME@$SERVER_IP" "mkdir -p $DEPLOY_PATH && chown -R $SERVER_USERNAME:$SERVER_USERNAME $DEPLOY_PATH"
    
    # Sync new content from local build to server
    - rsync -avz --delete "$DIST_PATH/" "$SERVER_USERNAME@$SERVER_IP:$DEPLOY_PATH"
    
    # Deploy PM2 config if needed
    - rsync -avz ecosystem.config.cjs "$SERVER_USERNAME@$SERVER_IP:$DEPLOY_PATH/"
    
    # Install dependencies on the server
    - ssh "$SERVER_USERNAME@$SERVER_IP" "cd $DEPLOY_PATH && npm install"
    
    # Restart PM2 process or start it if not already running
    - ssh "$SERVER_USERNAME@$SERVER_IP" "cd $DEPLOY_PATH && pm2 restart $PM2_PROCESS_NAME || pm2 start ecosystem.config.cjs --name $PM2_PROCESS_NAME"
